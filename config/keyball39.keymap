#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        Hiragana: Hiragana {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "HIRAGANA";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
&kp Q      &kp W     &kp E     &kp R           &kp T                    &kp Y    &kp U  &kp I      &kp O    &kp P
&kp A      &kp S     &kp D     &kp F           &kp G                    &kp H    &kp J  &kp K      &kp L    &kp BSPC
&kp Z      &kp X     &kp C     &kp V           &kp B                    &kp N    &kp M  &kp COMMA  &kp DOT  &kp ENTER
&kp LCTRL  &kp LALT  &kp LGUI  &kp LEFT_SHIFT  &kp SPACE  &mo 1  &mo 2  &kp TAB                             &kp ESCAPE
            >;
        };

        number_layer {
            label = "Number";
            bindings = <
&kp N1  &kp N2       &kp N3    &kp N4         &kp N5                 &kp N6                  &kp N7              &kp N8            &kp N9             &kp N0
&mo 4   &kp PAGE_UP  &kp HOME  &kp PAGE_DOWN  &none                  &kp LEFT                &kp DOWN            &kp UP            &kp RIGHT          &kp LEFT_SHIFT
&none   &none        &kp END   &none          &none                  &kp LC(LG(LEFT_ARROW))  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(LG(RIGHT))  &kp LA(LC(LG(LEFT_SHIFT)))
&trans  &trans       &trans    &trans         &trans  &trans  &mo 3  &trans                                                                           &trans
            >;
        };

        symbol_layer {
            label = "Symbol";
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                 &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)
&none             &none             &none             &none             &none                            &kp MINUS         &kp EQUAL         &kp LBKT          &kp RBKT          &kp BSLH
&none             &none             &none             &none             &none                            &kp SEMI          &kp APOS          &kp COMMA         &kp DOT           &kp FSLH
&trans            &trans            &trans            &trans            &kp LG(SPACE)     &mo 3  &trans  &trans                                                                  &kp GRAVE
            >;
        };

        function_layer {
            label = "Function";
            bindings = <
&none      &kp LG(W)  &kp LG(Z)      &kp LG(LS(Z))  &kp LC(LG(T))                &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0
&kp LG(A)  &kp LG(F)  &kp LA(LS(F))  &kp LG(LS(F))  &none                        &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1
&none      &kp LG(X)  &kp LG(C)      &kp LG(V)      &none                        &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_SEL 2
&none      &none      &none          &none          &none          &none  &none  &none                              &none
            >;
        };

        mouse_layer {
            bindings = <
&none  &none  &none  &none  &none                &none  &none      &none      &none  &none
&none  &none  &none  &none  &none                &none  &mkp LCLK  &mkp RCLK  &none  &none
&none  &none  &none  &none  &none                &none  &none      &none      &none  &none
&none  &none  &none  &none  &none  &none  &none  &none                               &none
            >;

            label = "Mouse";
        };
    };
};
